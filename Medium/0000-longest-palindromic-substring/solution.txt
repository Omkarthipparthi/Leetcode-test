class Solution {
    public String longestPalindrome(String s) {
        int n = s.length();
        int dp [] [] = new int [n][n];
        int resIdx =0, resLen =1;
        for(int i=0;i<n;i++){
            dp[i][i] = 1;
        }

        for(int i=0;i<n;i++){
            if(i+1<n && s.charAt(i)==s.charAt(i+1)){
                dp[i][i+1]=1;
                if(resLen< 2) {resLen =2; resIdx =i;}
            }
        }
        
        for(int len=3;len<=n;len++){
            for(int i=0;i<n-len+1;i++){
                int j=i+len-1;

                if(dp[i+1][j-1]==1 && s.charAt(i)==s.charAt(j) ){
                    dp[i][j]=1;
                    if(resLen< j-i+1) {resLen = j-i+1; resIdx =i;}
                }
            }
        }



        return s.substring(resIdx, resIdx+resLen);
    }

}